buildscript {
    ext {
        springBootVersion = '2.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
           url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.freefair.gradle:lombok-plugin:4.1.6"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: 'io.freefair.lombok'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

checkstyle {
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    configProperties = [
        'configDir': rootProject.file('config/checkstyle'),
        'baseDir': rootDir,
    ]
    checkstyleMain.exclude '**/info/mywinecellar/util/Regex.java',
            '**/info/mywinecellar/email/EmailService.java',
            '**/info/mywinecellar/WineWebappApplication.java'

    toolVersion "8.26"
}

dependencies {

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.mockito:mockito-junit-jupiter:2.25.0')
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE')
    compile('org.webjars:webjars-locator:0.32')
    compile('org.webjars:bootstrap:4.1.3')
    compile('com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.0')
    compile('com.github.cliftonlabs:json-simple:3.1.0')
    compile('javax.inject:javax.inject:1')
    compile('org.passay:passay:1.5.0')
    compile('org.apache.commons:commons-lang3:3.9')

    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql:42.2.5')
    compileOnly('org.projectlombok:lombok:1.18.6')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.mockito:mockito-core:2.+')

    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')

}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}