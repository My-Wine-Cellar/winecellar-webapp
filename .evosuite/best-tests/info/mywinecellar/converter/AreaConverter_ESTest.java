/*
 * This file was automatically generated by EvoSuite
 * Fri May 22 13:04:13 GMT 2020
 */

package info.mywinecellar.converter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import info.mywinecellar.converter.AreaConverter;
import info.mywinecellar.converter.RegionConverter;
import info.mywinecellar.dto.AreaDto;
import info.mywinecellar.model.Area;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AreaConverter_ESTest extends AreaConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AreaConverter areaConverter0 = new AreaConverter();
      RegionConverter regionConverter0 = new RegionConverter();
      Injector.inject(areaConverter0, (Class<?>) AreaConverter.class, "regionConverter", (Object) regionConverter0);
      Injector.validateBean(areaConverter0, (Class<?>) AreaConverter.class);
      Area area0 = new Area("", "", "");
      AreaDto areaDto0 = new AreaDto();
      Long long0 = new Long((-3761L));
      area0.setId(long0);
      Area area1 = areaConverter0.toEntity(area0, areaDto0);
      assertFalse(area1.isNew());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AreaConverter areaConverter0 = new AreaConverter();
      RegionConverter regionConverter0 = new RegionConverter();
      Injector.inject(areaConverter0, (Class<?>) AreaConverter.class, "regionConverter", (Object) regionConverter0);
      Injector.validateBean(areaConverter0, (Class<?>) AreaConverter.class);
      Area area0 = new Area();
      // Undeclared exception!
      try { 
        areaConverter0.toDto(area0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.mywinecellar.dto.AbstractKeyDto", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AreaConverter areaConverter0 = new AreaConverter();
      RegionConverter regionConverter0 = new RegionConverter();
      Injector.inject(areaConverter0, (Class<?>) AreaConverter.class, "regionConverter", (Object) regionConverter0);
      Injector.validateBean(areaConverter0, (Class<?>) AreaConverter.class);
      // Undeclared exception!
      try { 
        areaConverter0.toDto((Area) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Area is null
         //
         verifyException("info.mywinecellar.converter.AreaConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AreaConverter areaConverter0 = new AreaConverter();
      RegionConverter regionConverter0 = new RegionConverter();
      Injector.inject(areaConverter0, (Class<?>) AreaConverter.class, "regionConverter", (Object) regionConverter0);
      Injector.validateBean(areaConverter0, (Class<?>) AreaConverter.class);
      // Undeclared exception!
      try { 
        areaConverter0.toEntity((Area) null, (AreaDto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.mywinecellar.converter.AreaConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AreaConverter areaConverter0 = new AreaConverter();
      RegionConverter regionConverter0 = new RegionConverter();
      Injector.inject(areaConverter0, (Class<?>) AreaConverter.class, "regionConverter", (Object) regionConverter0);
      Injector.validateBean(areaConverter0, (Class<?>) AreaConverter.class);
      Area area0 = new Area();
      AreaDto areaDto0 = new AreaDto();
      Area area1 = areaConverter0.toEntity(area0, areaDto0);
      assertSame(area1, area0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AreaConverter areaConverter0 = new AreaConverter();
      RegionConverter regionConverter0 = new RegionConverter();
      Injector.inject(areaConverter0, (Class<?>) AreaConverter.class, "regionConverter", (Object) regionConverter0);
      Injector.validateBean(areaConverter0, (Class<?>) AreaConverter.class);
      LinkedHashSet<Area> linkedHashSet0 = new LinkedHashSet<Area>();
      Area area0 = new Area("@XWdb|.g.k", "", "BY1*\"ix");
      linkedHashSet0.add(area0);
      // Undeclared exception!
      try { 
        areaConverter0.toDto((Set<Area>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.mywinecellar.dto.AreaDto", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AreaConverter areaConverter0 = new AreaConverter();
      RegionConverter regionConverter0 = new RegionConverter();
      Injector.inject(areaConverter0, (Class<?>) AreaConverter.class, "regionConverter", (Object) regionConverter0);
      Injector.validateBean(areaConverter0, (Class<?>) AreaConverter.class);
      LinkedHashSet<Area> linkedHashSet0 = new LinkedHashSet<Area>();
      linkedHashSet0.add((Area) null);
      // Undeclared exception!
      try { 
        areaConverter0.toDto((Set<Area>) linkedHashSet0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Area is null
         //
         verifyException("info.mywinecellar.converter.AreaConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AreaConverter areaConverter0 = new AreaConverter();
      RegionConverter regionConverter0 = new RegionConverter();
      Injector.inject(areaConverter0, (Class<?>) AreaConverter.class, "regionConverter", (Object) regionConverter0);
      Injector.validateBean(areaConverter0, (Class<?>) AreaConverter.class);
      // Undeclared exception!
      try { 
        areaConverter0.toDto((Set<Area>) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Area list is null
         //
         verifyException("info.mywinecellar.converter.AreaConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AreaConverter areaConverter0 = new AreaConverter();
      RegionConverter regionConverter0 = new RegionConverter();
      Injector.inject(areaConverter0, (Class<?>) AreaConverter.class, "regionConverter", (Object) regionConverter0);
      Injector.validateBean(areaConverter0, (Class<?>) AreaConverter.class);
      LinkedHashSet<Area> linkedHashSet0 = new LinkedHashSet<Area>();
      List<AreaDto> list0 = areaConverter0.toDto((Set<Area>) linkedHashSet0);
      assertEquals(0, list0.size());
  }
}
