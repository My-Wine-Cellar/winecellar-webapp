/*
 * This file was automatically generated by EvoSuite
 * Fri May 22 12:45:48 GMT 2020
 */

package info.mywinecellar.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import info.mywinecellar.json.Builder;
import info.mywinecellar.json.MyWineCellar;
import info.mywinecellar.model.Area;
import info.mywinecellar.model.Closure;
import info.mywinecellar.model.Color;
import info.mywinecellar.model.Country;
import info.mywinecellar.model.Producer;
import info.mywinecellar.model.Region;
import info.mywinecellar.model.Shape;
import info.mywinecellar.model.Type;
import info.mywinecellar.model.Wine;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Builder_ESTest extends info.mywinecellar.json.Builder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Builder builder0 = new Builder();
      Wine wine0 = new Wine();
      // Undeclared exception!
      try { 
        builder0.wine(wine0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.mywinecellar.dto.AbstractKeyDto", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Builder builder0 = new Builder();
      Region region0 = new Region("vYQ!>TT2Q*p0vMjh", "vYQ!>TT2Q*p0vMjh", "vYQ!>TT2Q*p0vMjh");
      Builder builder1 = builder0.region(region0);
      // Undeclared exception!
      try { 
        builder1.region(region0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.mywinecellar.json.MyWineCellar", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Builder builder0 = new Builder();
      Producer producer0 = new Producer();
      // Undeclared exception!
      try { 
        builder0.producer(producer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.mywinecellar.dto.AbstractKeyDto", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Builder builder0 = new Builder();
      // Undeclared exception!
      try { 
        builder0.country((Country) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.mywinecellar.json.Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Builder builder0 = new Builder();
      byte[] byteArray0 = new byte[5];
      Producer producer0 = new Producer(">yfkpQBHY48o>mo6", "", ">yfkpQBHY48o>mo6", "", ">yfkpQBHY48o>mo6", ">yfkpQBHY48o>mo6", byteArray0);
      Integer integer0 = new Integer((byte)1);
      Float float0 = new Float(1.0);
      Closure closure0 = new Closure();
      Shape shape0 = new Shape();
      Color color0 = new Color("@-(UkF", "&7nIwt30", (String) null);
      Type type0 = new Type();
      Wine wine0 = new Wine("&7nIwt30", integer0, (Float) null, float0, (Float) null, float0, integer0, ">yfkpQBHY48o>mo6", "Country(null)", producer0, closure0, shape0, color0, type0, byteArray0);
      Builder builder1 = builder0.wine(wine0);
      assertSame(builder0, builder1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Builder builder0 = new Builder();
      Long long0 = new Long((-1L));
      Region region0 = new Region("", "", "");
      region0.setId(long0);
      builder0.region(region0);
      Builder builder1 = builder0.region(region0);
      assertSame(builder1, builder0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Builder builder0 = new Builder();
      byte[] byteArray0 = new byte[5];
      Producer producer0 = new Producer(">yfkpQBHY48o>mo6", "", ">yfkpQBHY48o>mo6", "", ">yfkpQBHY48o>mo6", ">yfkpQBHY48o>mo6", byteArray0);
      Long long0 = Long.valueOf(297L);
      producer0.setId(long0);
      Builder builder1 = builder0.producer(producer0);
      Builder builder2 = builder0.producer(producer0);
      assertSame(builder2, builder1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Builder builder0 = new Builder();
      Country country0 = new Country("", "", "", "");
      Long long0 = new Long((-1L));
      country0.setId(long0);
      Builder builder1 = builder0.country(country0);
      Builder builder2 = builder0.country(country0);
      assertSame(builder2, builder1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Builder builder0 = new Builder();
      Area area0 = new Area();
      // Undeclared exception!
      try { 
        builder0.area(area0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("info.mywinecellar.dto.AbstractKeyDto", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Builder builder0 = new Builder();
      MyWineCellar myWineCellar0 = builder0.build();
      assertNotNull(myWineCellar0);
  }
}
